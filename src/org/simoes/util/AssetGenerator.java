package org.simoes.util;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;

import org.simoes.classify.Category;

import com.google.common.base.Charsets;
import com.google.common.io.Files;

/**
 * Creates our "generated.css" and "generated.js" files 
 * @author csimoes
 *
 */
public class AssetGenerator {
	
	
	public AssetGenerator() {
		super();
	}
	

	public void createJavaScriptFile(String filename) throws FileNotFoundException, IOException {
		Category[] categories = Category.getAllCategories();
		
		StringBuffer sb = new StringBuffer();
		sb.append(createLine("/* Autogenerated file, changes will likely be overridden."));
		sb.append(createLine(" * See AssetGenerator.java"));
		sb.append(createLine(" * */"));
		sb.append(createLine("$(document).ready(function() {"));
		// create each function for showing and hiding each category
		for (Category category : categories) {
			sb.append(createLine("	$('.btn-" + category.getName() + "').click(function() {"));
			// hide all categories except this one
			for (Category cat2 : categories) {
				if(cat2.equals(category)) {
					sb.append(createLine("		$('." + cat2.getName() + "').parent().show();"));
				} else {
					sb.append(createLine("		$('." + cat2.getName() + "').parent().hide();"));
				}
			}
			sb.append(createLine("	});"));
		}
		
		// create show ALL javascript
		for (Category category : categories) {
			sb.append(createLine("	$('.btn-all').click(function() {"));
			// hide all categories except this one
			for (Category cat2 : categories) {
				sb.append(createLine("		$('." + cat2.getName() + "').parent().show();"));
			}
			sb.append(createLine("	});"));
		}

		sb.append(createLine("});")); // end of $(document).ready(function() {
		
		File f = new File(filename);
		BufferedWriter bw = Files.newWriter(f, Charsets.UTF_8);
		bw.write(sb.toString());
		bw.close();
	}

	public void createCSSFile(String filename) throws FileNotFoundException, IOException {
		Category[] categories = Category.getAllCategories();
		
		StringBuffer sb = new StringBuffer();
		sb.append(createLine("/* Autogenerated file, changes will likely be overridden."));
		sb.append(createLine(" * See AssetGenerator.java"));
		sb.append(createLine(" * */"));
		// create .[category] classes
		for (Category category : categories) {
			sb.append(createLine("." + category.getName() + " { background-color: #" + category.getColorHex() + " } "));
		}		
		
		// create .btn-[category] classes
		for (Category category : categories) {
			String h = category.getColorHex();
			sb.append(createLine(".btn-" + category.getName() + " {"));
			sb.append(createLine("  color: #000000;"));
			sb.append(createLine("  text-shadow: 0 -1px 0 rgba(0, 0, 0, 0.25);"));
			sb.append(createLine("  background-color: #" + h + ";"));
			sb.append(createLine("  *background-color: #" + h + ";"));
			sb.append(createLine("  background-image: -moz-linear-gradient(top, #" + h + ", #" + h + ");"));
			sb.append(createLine("  background-image: -webkit-gradient(linear, 0 0, 0 100%, from(#" + h + "), to(#" + h + "));"));
			sb.append(createLine("  background-image: -webkit-linear-gradient(top, #" + h + ", #" + h + ");"));
			sb.append(createLine("  background-image: -o-linear-gradient(top, #" + h + ", #" + h + ");"));
			sb.append(createLine("  background-image: linear-gradient(to bottom, #" + h + ", #" + h + ");"));
			sb.append(createLine("  background-repeat: repeat-x;"));
			sb.append(createLine("  border-color: #" + h + " #" + h + " #" + h + ";"));
			sb.append(createLine("  border-color: rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.25);"));
			sb.append(createLine("  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ff" + h + "', endColorstr='#ff" + h + "', GradientType=0);"));
			sb.append(createLine("  filter: progid:DXImageTransform.Microsoft.gradient(enabled=false);"));
			sb.append(createLine("}"));
		}
		
		File f = new File(filename);
		BufferedWriter bw = Files.newWriter(f, Charsets.UTF_8);
		bw.write(sb.toString());
		bw.close();
	}
	
	private String createLine(String text) {
		return text + "\n";
	}
	
	public static void main(String args[]) {
		String jsFile = "/Users/csimoes/workspace-juno/catweetegories/WebContent/assets/js/generated.js";
		String cssFile = "/Users/csimoes/workspace-juno/catweetegories/WebContent/assets/css/generated.css";
		AssetGenerator ag = new AssetGenerator();
		try {
			ag.createJavaScriptFile(jsFile);
			ag.createCSSFile(cssFile);
		} catch(IOException e) {
			System.err.println(e.getMessage());
			e.printStackTrace();
		}
	}
}
